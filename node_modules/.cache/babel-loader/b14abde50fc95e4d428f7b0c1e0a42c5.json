{"ast":null,"code":"import _defineProperty from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/src/pages/Createpost.js\";\nimport React, { Component } from 'react';\nimport { withAuth } from '../lib/authContext';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../components/Form';\nimport post from '../lib/post-service';\nimport '../stylesheets/create-post-page.css';\n\nvar Createpost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Createpost, _Component);\n\n  function Createpost() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Createpost);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Createpost)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      steps: [],\n      isTitleEmpty: true,\n      isDescriptionEmpty: true,\n      title: '',\n      text: '',\n      isPostCreated: false\n    };\n\n    _this.handleSubmit = function (value) {\n      var steps = _this.state.steps;\n      steps.push({\n        step: value\n      });\n\n      _this.setState({\n        steps: steps\n      });\n    };\n\n    _this.handleCreatePost = function () {\n      var _this$state = _this.state,\n          title = _this$state.title,\n          text = _this$state.text,\n          steps = _this$state.steps;\n      post.createPost({\n        title: title,\n        text: text,\n        steps: steps\n      }).then(function () {\n        _this.setState({\n          isPostCreated: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      if (name === 'title') {\n        var _this$setState;\n\n        _this.setState((_this$setState = {}, _defineProperty(_this$setState, name, value), _defineProperty(_this$setState, \"isTitleEmpty\", false), _this$setState));\n      } else if (name === 'text') {\n        var _this$setState2;\n\n        _this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, name, value), _defineProperty(_this$setState2, \"isDescriptionEmpty\", false), _this$setState2));\n      }\n\n      console.log(_this.state.title, _this.state.text);\n    };\n\n    return _this;\n  }\n\n  _createClass(Createpost, [{\n    key: \"allIsNotEmpty\",\n    value: function allIsNotEmpty() {\n      var _this$state2 = this.state,\n          isTitleEmpty = _this$state2.isTitleEmpty,\n          isDescriptionEmpty = _this$state2.isDescriptionEmpty,\n          steps = _this$state2.steps;\n\n      if (!isTitleEmpty && !isDescriptionEmpty && steps.length > 0) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"handelePostCreated\",\n    value: function handelePostCreated() {\n      var isAllNonEmpty = false;\n      isAllNonEmpty = this.allIsNotEmpty();\n      var steps = this.state.steps;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"create-post-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"title\",\n        onChange: this.handleChange,\n        placeholder: \"Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"create-post-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"text\",\n        onChange: this.handleChange,\n        placeholder: \"Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"create-post-elements\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"label-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Define your steps:\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, steps.map(function (step, key) {\n        console.log(step);\n        return React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, step.step);\n      })), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), isAllNonEmpty ? React.createElement(\"button\", {\n        onClick: this.handleCreatePost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Create Post\") : null));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var isPostCreated = this.state.isPostCreated;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, !isPostCreated ? this.handelePostCreated() : React.createElement(Redirect, {\n        to: '/',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Createpost;\n}(Component);\n\nexport default withAuth(Createpost);","map":{"version":3,"sources":["/Users/ibandasca/Documents/Ironhack/DEV/Mod03/Mod03-Final-Project/frontend/epi-frontend/src/pages/Createpost.js"],"names":["React","Component","withAuth","Redirect","Form","post","Createpost","state","steps","isTitleEmpty","isDescriptionEmpty","title","text","isPostCreated","handleSubmit","value","push","step","setState","handleCreatePost","createPost","then","catch","error","console","log","handleChange","event","target","name","length","isAllNonEmpty","allIsNotEmpty","map","key","handelePostCreated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withAuth } from '../lib/authContext';\nimport { Redirect } from 'react-router-dom';\nimport Form from '../components/Form';\nimport post from '../lib/post-service';\nimport '../stylesheets/create-post-page.css'\n\nclass Createpost extends Component {\n  state = {\n    steps: [],\n    isTitleEmpty: true,\n    isDescriptionEmpty: true,\n    title: '',\n    text: '',\n    isPostCreated: false,\n  }\n\n  handleSubmit = (value) => {\n    const { steps } = this.state;\n    steps.push({step: value})\n    this.setState({\n      steps,\n    })\n  }\n\n  allIsNotEmpty(){\n    const { isTitleEmpty, isDescriptionEmpty, steps } = this.state;\n    if (!isTitleEmpty && !isDescriptionEmpty && steps.length > 0){\n      return true;\n    }\n    return false;\n  }\n\n  handleCreatePost = () => {\n    const { title, text, steps } = this.state;\n    post.createPost({ title, text, steps })\n    .then( () => {\n      this.setState({\n        isPostCreated: true,\n      })\n    })\n    .catch( error => {console.log(error) })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target\n    if(name === 'title'){\n      this.setState({\n        [name]: value,\n        isTitleEmpty: false,\n      });\n    } else if (name === 'text'){\n      this.setState({\n        [name]: value,\n        isDescriptionEmpty: false,\n      });\n    }\n    console.log(this.state.title, this.state.text)\n  }\n\n  handelePostCreated(){\n    let isAllNonEmpty = false;\n    isAllNonEmpty = this.allIsNotEmpty();\n    const {steps} = this.state;\n    return (\n      <div className=\"container\">\n        <div>\n          <div className=\"create-post-elements\">\n            <input name=\"title\"onChange={this.handleChange} placeholder=\"Title\"/>\n          </div>\n          <div className=\"create-post-elements\">\n            <textarea name=\"text\" onChange={this.handleChange}placeholder=\"Description\"></textarea>\n          </div>\n        </div>\n        <div className=\"create-post-elements\">\n          <p className=\"label-text\">Define your steps:</p>\n          <ol>\n            { steps.map( (step, key) => {\n              console.log(step)\n              return <li key={key}>\n              {step.step}\n              </li>\n                })}\n          </ol>\n          <Form onSubmit={this.handleSubmit}/>\n          { isAllNonEmpty ? <button onClick={this.handleCreatePost}>Create Post</button> : null }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { isPostCreated } = this.state;  \n    return (\n      <div>\n        {!isPostCreated ? this.handelePostCreated() : <Redirect to={'/'}/>}\n      </div>\n    )\n  }\n}\n  \n\nexport default withAuth(Createpost);"]},"metadata":{},"sourceType":"module"}